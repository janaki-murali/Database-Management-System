/*A Thesis Repository System for a Technical University stores the details of the MS and
PhD students in the University along with the details of the concerned students, guides
and the indices associated with the submitted thesis.
Create an ER model to design a relational database for this system. Convert this ER
model to a collection of relation schemas each of which satisfy 1NF,2NF and 3NF. Write
Queries in SQL for the following.
(a) Find the details of the guides who had guided the students for submitting thesis
containing the keword ”Approximation Agorithms”.
(b) Find the details of the guides who produced the maximum number of Thesis and
the minimum number of Thesis.
(c) Find the details of the students who submitted more than one thesis with the same
central area but worked under differnt guides.
(d) Find the details of the guides who produced phD thesis with different central areas.
(e) Obtain a listing of all the keywords in the index and the number of PhD thesis and
MS thesis containing each of these keywords.
(f) Find the details of all the guides who did not produce any thesis within a specific
period,
(g) Find the most trending area and the lest trending area. The most trending area is
the central area with the highest number of submitted thesis and the least trending
area is the one with the least number of submitted thesis.
(h) Find the details of all guides who produced MS thesis only from one central area.
(i) Find the details of all students who submitted more than one thesis with the condi-
tion that no two thesis submitted by the student do not have a common keyword.*/

CREATE DATABASE THESIS;
USE THESIS;

CREATE TABLE STUDENT(
    SNAME VARCHAR(50),
    ROLLNO CHAR(7) PRIMARY KEY,
    DEPARTMENT VARCHAR(40),
    SPECIFICATION VARCHAR(40),
    AGE INT
);

CREATE TABLE GUIDE(
    GUIDEID INT PRIMARY KEY,
    GNAME VARCHAR(40),
    RESEARCH_AREA VARCHAR(40),
    DESIGNATION VARCHAR(50),
    DEPARTMENT VARCHAR(50),
    EMAIL VARCHAR(50),
    PHONE_NO BIGINT
);

CREATE TABLE THESISDETAILS(
    TNAME VARCHAR(50),
    CENTRAL_AREA VARCHAR(60),
    ROLLNO CHAR(7),
    GUIDEID INT,
    SUB_DATE DATE,
    PRIMARY KEY(TNAME, ROLLNO, GUIDEID),
    FOREIGN KEY(ROLLNO) REFERENCES STUDENT(ROLLNO),
    FOREIGN KEY(GUIDEID) REFERENCES GUIDE(GUIDEID)
);

CREATE TABLE INDICES(
    TNAME VARCHAR(40),
    ROLLNO CHAR(7),
    GUIDEID INT,
    KEYWORD VARCHAR(60),
    PRIMARY KEY(TNAME, ROLLNO, GUIDEID),
    FOREIGN KEY(TNAME) REFERENCES THESISDETAILS(TNAME),
    FOREIGN KEY(ROLLNO) REFERENCES STUDENT(ROLLNO),
    FOREIGN KEY(GUIDEID) REFERENCES GUIDE(GUIDEID)
);

INSERT INTO STUDENT VALUES('ATHARV', 'SY22P02', 'PSYCHOLOGY', 'COGNITIVE EMOTIONS', 26);
INSERT INTO STUDENT VALUES('SUSHMIT', 'ME23M03', 'MECHANICAL ENGINEERING', 'AUTOMOBILE ENGINEERING', 24);
INSERT INTO STUDENT VALUES('JANAKI', 'CH22P14', 'CHEMISTRY', 'POLYMERS', 21);
INSERT INTO STUDENT VALUES('ADITHYAN', 'CS22P03', 'COMPUTER SCIENCE', 'DATA STRUCTURES AND ALGORITHMS', 23);
INSERT INTO STUDENT VALUES('ADITI', 'CS22M09', 'COMPUTER SCIENCE', 'DATA STRUCTURES AND ALGORITHMS', 23);
INSERT INTO STUDENT VALUES('VIJAY', 'CS22P05', 'COMPUTER SCIENCE', 'ARTIFICIAL INTELLIGENCE', 25);
INSERT INTO STUDENT VALUES('PRIYA', 'BT22M01', 'BIOTECHNOLOGY', 'GENETIC ENGINEERING', 22);

INSERT INTO GUIDE VALUES(3020, 'EDWARD', 'ORGANIC POLYMERS', 'PROFESSOR', 'CHEMISTRY', 'edward123@gmail.com', 9876543210);
INSERT INTO GUIDE VALUES(3040, 'MYTHILI', 'NEUROSCIENCE', 'PROFESSOR', 'PSYCHOLOGY', 'mythili123@gmail.com', 9876598765);
INSERT INTO GUIDE VALUES(3060, 'ANAND', 'APPROXIMATION ALGORITHMS', 'ADHOC PROFESSOR', 'COMPUTER SCIENCE', 'anand123@gmail.com', 9876587687);
INSERT INTO GUIDE VALUES(3080, 'JOHN', 'FLUID MECHANICS', 'ASSISTANT PROFESSOR', 'MECHANICAL ENGINEERING', 'john123@gmail.com', 9876500998);
INSERT INTO GUIDE VALUES(3010, 'SIMON', 'MACHINE LEARNING', 'ASSISTANT PROFESSOR', 'COMPUTER SCIENCE', 'simon123@gmail.com', 9876500990);
INSERT INTO GUIDE VALUES(3030, 'MIRA', 'GENETICS', 'PROFESSOR', 'BIOTECHNOLOGY', 'mira123@gmail.com', 9876512345);

INSERT INTO THESISDETAILS VALUES('APPROXIMATION ALGORITHMS AND EXECUTION', 'APPROXIMATION ALGORITHM', 'CS22P03', 3060, '2024-02-26');
INSERT INTO THESISDETAILS VALUES('EXTREME VOCAL AND PRAGMATIC STRESSES', 'COGNITIVE EMOTIONS IN NEUROSCIENCE', 'SY22P02', 3040, '2024-03-20');
INSERT INTO THESISDETAILS VALUES('PUMPING AND LUBRICATION FLUIDS', 'AUTOMOBILES AND MECHANICS', 'ME23M03', 3080, '2024-04-02');
INSERT INTO THESISDETAILS VALUES('ORGANIC ANALYSIS AND POLYMER TESTING', 'POLYMERS', 'CH22P14', 3020, '2024-05-30');
INSERT INTO THESISDETAILS VALUES('APPROXIMATION ALGORITHMS AND EXECUTION', 'APPROXIMATION ALGORITHM', 'CS22M09', 3060, '2024-06-30');
INSERT INTO THESISDETAILS VALUES('NEURAL NETWORKS AND BRAIN FUNCTIONALITY', 'NEUROSCIENCE', 'CS22P05', 3010, '2024-07-15');
INSERT INTO THESISDETAILS VALUES('GENETIC SEQUENCING AND CRISPR TECHNIQUES', 'GENETICS', 'BT22M01', 3030, '2024-08-10');
INSERT INTO THESISDETAILS VALUES('DATA ANALYSIS IN MACHINE LEARNING', 'MACHINE LEARNING', 'CS22P03', 3010, '2024-09-25');
INSERT INTO THESISDETAILS VALUES('ALGORITHMIC PERFORMANCE IN AI', 'ARTIFICIAL INTELLIGENCE', 'CS22P05', 3010, '2024-10-01');
INSERT INTO THESISDETAILS VALUES('ORGANIC POLYMERS AND SYNTHESIS', 'ORGANIC POLYMERS', 'CH22P14', 3020, '2024-11-05');
INSERT INTO STUDENT VALUES('KAVYA', 'BI22P08', 'BIOTECHNOLOGY', 'MICROBIOLOGY', 24);
INSERT INTO STUDENT VALUES('RAVI', 'PH22M06', 'PHYSICS', 'QUANTUM MECHANICS', 27);

INSERT INTO THESISDETAILS VALUES('MICROBIOLOGY IN CLINICAL STUDIES', 'MICROBIOLOGY', 'BI22P08', 3030, '2024-03-10');
INSERT INTO THESISDETAILS VALUES('MICROBIOLOGY AND DNA RESEARCH', 'MICROBIOLOGY', 'BI22P08', 3020, '2024-05-15');
INSERT INTO THESISDETAILS VALUES('ADVANCED QUANTUM ENTANGLEMENT', 'QUANTUM MECHANICS', 'PH22M06', 3080, '2024-06-18');

INSERT INTO INDICES VALUES('APPROXIMATION ALGORITHMS AND EXECUTION', 'CS22P03', 3060, 'APPROXIMATION ALGORITHM, AUTOMATION, DATA, COMPUTER');
INSERT INTO INDICES VALUES('EXTREME VOCAL AND PRAGMATIC STRESSES', 'SY22P02', 3040, 'PSYCHOLOGY, COGNITIVE, EMOTIONS');
INSERT INTO INDICES VALUES('PUMPING AND LUBRICATION FLUIDS', 'ME23M03', 3080, 'AUTOMOBILES, FLUIDS, MECHANICS');
INSERT INTO INDICES VALUES('ORGANIC ANALYSIS AND POLYMER TESTING', 'CH22P14', 3020, 'POLYMER, ORGANIC, CHEMICAL');
INSERT INTO INDICES VALUES('NEURAL NETWORKS AND BRAIN FUNCTIONALITY', 'CS22P05', 3040, 'NEUROSCIENCE, BRAIN, AI');
INSERT INTO INDICES VALUES('GENETIC SEQUENCING AND CRISPR TECHNIQUES', 'BT22M01', 3030, 'GENETICS, CRISPR, DNA');
INSERT INTO INDICES VALUES('DATA ANALYSIS IN MACHINE LEARNING', 'CS22P03', 3010, 'MACHINE LEARNING, DATA, ANALYSIS');
INSERT INTO INDICES VALUES('ALGORITHMIC PERFORMANCE IN AI', 'CS22P05', 3010, 'ALGORITHMS, AI, PERFORMANCE');
INSERT INTO INDICES VALUES('ORGANIC POLYMERS AND SYNTHESIS', 'CH22P14', 3020, 'ORGANIC, POLYMERS, CHEMISTRY');
INSERT INTO INDICES VALUES('MICROBIOLOGY IN CLINICAL STUDIES', 'BI22P08', 3030, 'MICROBIOLOGY, CLINICAL, DNA');
INSERT INTO INDICES VALUES('MICROBIOLOGY AND DNA RESEARCH', 'BI22P08', 3020, 'MICROBIOLOGY, DNA, RESEARCH');
INSERT INTO INDICES VALUES('QUANTUM PARTICLE DYNAMICS', 'PH22M06', 3010, 'QUANTUM, PARTICLE, DYNAMICS');
INSERT INTO INDICES VALUES('ADVANCED QUANTUM ENTANGLEMENT', 'PH22M06', 3080, 'QUANTUM, ENTANGLEMENT, PHYSICS');

/*DETAILS OF GUIDES WHO HAVE PRODUCED THESIS WHOSE ASSOSIATED KEYWORDS CONTAIN THE TERM 'APPROXIMATION ALGORITHM'*/
SELECT G.GUIDEID,G.GNAME,G.DESIGNATION,G.RESEARCH_AREA,G.DEPARTMENT,G.EMAIL,G.PHONE_NO
FROM GUIDE G
JOIN THESISDETAILS T ON G.GUIDEID=T.GUIDEID
JOIN INDICES I ON T.TNAME=I.TNAME
WHERE I.KEYWORD LIKE '%APPROXIMATION ALGORITHM%';

/*DETAILS OF GUIDES WHO HAVE PRODUCED MAX NO. OF THESIS AND MIN NO. OF THESIS*/
CREATE VIEW THESISCOUNT AS 
SELECT G.GUIDEID,G.GNAME,G.DESIGNATION,G.RESEARCH_AREA,G.DEPARTMENT,G.EMAIL,G.PHONE_NO,COUNT(T.TNAME) AS TCOUNT
FROM GUIDE G
JOIN THESISDETAILS T ON G.GUIDEID=T.GUIDEID
GROUP BY G.GUIDEID;

SELECT GUIDEID,GNAME,DESIGNATION,RESEARCH_AREA,DEPARTMENT,EMAIL,PHONE_NO,TCOUNT
FROM THESISCOUNT
WHERE TCOUNT=(SELECT MAX(TCOUNT) FROM THESISCOUNT);

SELECT GUIDEID,GNAME,DESIGNATION,RESEARCH_AREA,DEPARTMENT,EMAIL,PHONE_NO,TCOUNT
FROM THESISCOUNT
WHERE TCOUNT=(SELECT MIN(TCOUNT) FROM THESISCOUNT);

/*DETAILS OF STUDENTS WHO SUBMITTED MORE THAN ONE THESIS WITH THE SAME CENTRAL AREA BUT WORKED UNDER DIFFERENT GUIDES*/
SELECT S.SNAME,S.ROLLNO,S.DEPARTMENT,S.SPECIFICATION,S.AGE, T1.GUIDEID
FROM STUDENT S 
JOIN THESISDETAILS T1 ON T1.ROLLNO=S.ROLLNO
JOIN THESISDETAILS T2 ON T2.ROLLNO=S.ROLLNO
WHERE T1.CENTRAL_AREA=T2.CENTRAL_AREA
AND T1.GUIDEID!=T2.GUIDEID;

/*DETAILS OF GUIDES WHO PRODUCED PHD THESIS WITH DIFFERENT CENTRAL AREAS*/
SELECT G.GUIDEID,G.GNAME,G.DESIGNATION,G.RESEARCH_AREA,G.DEPARTMENT,G.EMAIL,G.PHONE_NO,T.CENTRAL_AREA 
FROM GUIDE G
JOIN THESISDETAILS T ON G.GUIDEID=T.GUIDEID
WHERE T.ROLLNO LIKE '%P%' AND T.GUIDEID IN (SELECT GUIDEID 
                                            FROM THESISDETAILS
                                            GROUP BY GUIDEID
                                            HAVING COUNT(DISTINCT CENTRAL_AREA)>1)
ORDER BY G.GNAME;

/*LISTING OF ALL KEYWORDS IN THE INDEX AND THE NUMBER OF PHD THESIS AND MS THESIS CONTAINING EACH OF THESE KEYWORDS*/
SELECT I.KEYWORD, SUM(T.ROLLNO LIKE '%P%') AS PHD_Thesis_Count, SUM(T.ROLLNO LIKE '%M%') AS MS_Thesis_Count
FROM INDICES I JOIN THESISDETAILS T ON I.TNAME = T.TNAME AND I.ROLLNO = T.ROLLNO
GROUP BY I.KEYWORD;

/*DETAILS OF GUIDES WHO DID NOT PRODUCE ANY THESIS WITHIN A SPECIFIED PERIOD*/
SELECT G.GUIDEID,G.GNAME,G.DESIGNATION,G.RESEARCH_AREA,G.DEPARTMENT,G.EMAIL,G.PHONE_NO 
FROM GUIDE G
JOIN THESISDETAILS T ON G.GUIDEID=T.GUIDEID
WHERE T.GUIDEID NOT IN (SELECT GUIDEID 
                        FROM THESISDETAILS      
                        WHERE SUB_DATE BETWEEN '2024-03-26' AND '2025-02-26');

/*THE MOST TRENDING AREA BEING THE ONE WITH HIGHEST NUMBER OF SUBMITTED THESIS AND LEAST TRENDING AREA BEING THE ONE WITH LOWEST NUMBER OF SUBMITTED THESIS*/
CREATE VIEW CENTRAL_AREA_COUNT AS
SELECT CENTRAL_AREA, COUNT(*) AS THESIS_COUNT
FROM THESISDETAILS
GROUP BY CENTRAL_AREA;

SELECT CENTRAL_AREA, THESIS_COUNT AS TRENDING_COUNT
FROM CENTRAL_AREA_COUNT
WHERE THESIS_COUNT = (SELECT MAX(THESIS_COUNT) FROM CENTRAL_AREA_COUNT);

SELECT CENTRAL_AREA, THESIS_COUNT AS TRENDING_COUNT
FROM CENTRAL_AREA_COUNT
WHERE THESIS_COUNT = (SELECT MIN(THESIS_COUNT) FROM CENTRAL_AREA_COUNT);

/*DETAILS OF GUIDES WHO PRODUCED MS THESIS ONLY FROM ONE CENTRAL AREA*/
SELECT G.GUIDEID,G.GNAME,G.DESIGNATION,G.RESEARCH_AREA,G.DEPARTMENT,G.EMAIL,G.PHONE_NO
FROM GUIDE G
JOIN THESISDETAILS T ON G.GUIDEID=T.GUIDEID
WHERE TNAME LIKE '%MS%'
GROUP BY GUIDEID
HAVING COUNT(DISTINCT CENTRAL_AREA)=1;

/*DETAILS OF ALL STUDENTS WHO SUBMITTED MORE THAN ONE THESIS WITH THE CONDITION THAT NO TWO THESIS SUBMITTED BY THE STUDENT HAVE A COMMON KEYWORD*/
SELECT S.SNAME,S.ROLLNO,S.DEPARTMENT,S.SPECIFICATION,S.AGE,T1.TNAME
FROM STUDENT S
JOIN THESISDETAILS T1 ON T1.ROLLNO=S.ROLLNO
JOIN THESISDETAILS T2 ON T2.ROLLNO=S.ROLLNO
JOIN INDICES I1 ON I1.TNAME=T1.TNAME AND I1.ROLLNO=T1.ROLLNO
JOIN INDICES I2 ON I2.TNAME=T2.TNAME AND I2.ROLLNO=T2.ROLLNO
WHERE T1.ROLLNO=T2.ROLLNO
AND I1.KEYWORD NOT IN (SELECT KEYWORD
                       FROM INDICES
                       WHERE TNAME=T2.TNAME
                       AND ROLLNO=T2.ROLLNO)
ORDER BY S.SNAME;

DROP DATABASE THESIS;
